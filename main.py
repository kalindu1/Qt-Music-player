# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from pygame import mixer
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog

mixer.init()


file = ""
playing = False

class Ui_mainWindow(object):

    def setupUi(self, mainWindow):
        global file

        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(570, 346)
        icon = QtGui.QIcon()
        icon.addPixmap(
            QtGui.QPixmap(
                "Res/music player.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off
        )
        mainWindow.setWindowIcon(icon)

        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Play_button = QtWidgets.QPushButton(self.centralwidget)
        self.Play_button.setGeometry(QtCore.QRect(380, 210, 75, 71))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(
            QtGui.QPixmap("Res/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off
        )

        self.Play_button.setIcon(icon1)
        self.Play_button.setIconSize(QtCore.QSize(80, 80))
        self.Play_button.setDefault(True)
        self.Play_button.setObjectName("Play_button")
        self.Pause_button = QtWidgets.QPushButton(self.centralwidget)
        self.Pause_button.setGeometry(QtCore.QRect(290, 210, 75, 71))

        icon2 = QtGui.QIcon()
        icon2.addPixmap(
            QtGui.QPixmap("Res/pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off
        )

        self.Pause_button.setIcon(icon2)
        self.Pause_button.setIconSize(QtCore.QSize(80, 80))
        self.Pause_button.setDefault(True)
        self.Pause_button.setObjectName("Pause_button")
        self.Stop_button = QtWidgets.QPushButton(self.centralwidget)
        self.Stop_button.setGeometry(QtCore.QRect(470, 210, 75, 71))

        icon3 = QtGui.QIcon()
        icon3.addPixmap(
            QtGui.QPixmap("Res/stop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off
        )

        self.Stop_button.setIcon(icon3)
        self.Stop_button.setIconSize(QtCore.QSize(80, 80))
        self.Stop_button.setDefault(True)
        self.Stop_button.setObjectName("Stop_button")
        self.Song_name = QtWidgets.QLabel(self.centralwidget)
        self.Song_name.setGeometry(QtCore.QRect(280, 160, 271, 31))

        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        font.setStrikeOut(False)

        self.Song_name.setFont(font)
        self.Song_name.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Song_name.setFrameShadow(QtWidgets.QFrame.Plain)
        self.Song_name.setTextFormat(QtCore.Qt.AutoText)
        self.Song_name.setAlignment(QtCore.Qt.AlignCenter)
        self.Song_name.setObjectName("Song_name")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(10, 21, 256, 191))
        self.listWidget.setObjectName("listWidget")
        self.Add_button = QtWidgets.QPushButton(self.centralwidget)
        self.Add_button.setGeometry(QtCore.QRect(100, 230, 75, 61))

        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)

        self.Add_button.setFont(font)
        self.Add_button.setAutoDefault(False)
        self.Add_button.setDefault(True)
        self.Add_button.setFlat(False)
        self.Add_button.setObjectName("Add_button")

        mainWindow.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(mainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 570, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")

        mainWindow.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")

        mainWindow.setStatusBar(self.statusbar)

        self.actionAbout_us = QtWidgets.QAction(mainWindow)
        self.actionAbout_us.setObjectName("actionAbout_us")
        self.actionHelp = QtWidgets.QAction(mainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionOpen = QtWidgets.QAction(mainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExit = QtWidgets.QAction(mainWindow)
        self.actionExit.setObjectName("actionExit")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionAbout_us)
        self.menuHelp.addAction(self.actionHelp)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(mainWindow)

        QtCore.QMetaObject.connectSlotsByName(mainWindow)

        print(file)
        
        # Check if the buttons are pressed

        self.Play_button.clicked.connect(self.Play_button_clicked)
        self.Add_button.clicked.connect(self.Add_button_clicked)


    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "MainWindow"))

        self.Song_name.setText(_translate("mainWindow", "Test"))
        self.Add_button.setText(_translate("mainWindow", "Add"))
        self.menuFile.setTitle(_translate("mainWindow", "File"))
        self.menuHelp.setTitle(_translate("mainWindow", "Help"))
        self.actionAbout_us.setText(_translate("mainWindow", "About us"))
        self.actionHelp.setText(_translate("mainWindow", "Help"))
        self.actionOpen.setText(_translate("mainWindow", "Open"))
        self.actionExit.setText(_translate("mainWindow", "Exit"))
    
    def Add_button_clicked(self):
        global file
        
        file = QFileDialog.getOpenFileName()
        print(file)

    def Play_button_clicked(self):
        global file
        global playing

        if playing:
            mixer.music.pause()
            playing = False

        else:
            # try to play a song 
            try:
                file = file[0]

                song = mixer.music.load(file)
                mixer.music.play()
    
                playing = True
            
            #  I usually don't like to use just a "except" but two errors can rais
            #       1 IndexError
            #       2 pygame.error
            #  Since I can't handel the pygame.error I decided to use just a "except"
            except:
                # Simple Debug massege
                print("no file loaded")
                self.Song_name.setText("No file")


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_mainWindow()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())
